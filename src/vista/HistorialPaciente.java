/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.MuestraCtrl;
import controlador.PacienteCtrl;
import controlador.TratamientoCtrl;
import java.awt.Label;
import java.awt.Panel;
import java.awt.event.ItemEvent;
import java.util.List;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import modelo.Muestra;
import modelo.Paciente;
import modelo.Usuario;

/**
 *
 * @author Marcelo
 */
public class HistorialPaciente extends javax.swing.JFrame {

    private final Usuario usuario;

    /** Controllers */
    private final PacienteCtrl pacienteCtrl;
    private final MuestraCtrl muestraCtrl;
    private final TratamientoCtrl tratamientoCtrl;
    
    /** General Properties */
    private DefaultComboBoxModel pacientes;
    private List<Paciente> listaPacientes;
    private Paciente paciente;


    /**
     * Creates new form HistorialPaciente
     */
    public HistorialPaciente(Usuario usuario) {
        pacienteCtrl = new PacienteCtrl();
        muestraCtrl = new MuestraCtrl();
        tratamientoCtrl = new TratamientoCtrl();
        this.usuario = usuario;

        initComponents();
        ipanel_Tratamientos.setLayout(new BoxLayout(ipanel_Tratamientos, BoxLayout.Y_AXIS));
        setComboBoxPacientes();
        setTratamientos();
        setCamposPaciente(paciente);
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_Paciente = new javax.swing.JPanel();
        lbl_IdPaciente = new javax.swing.JLabel();
        lbl_Nombre = new javax.swing.JLabel();
        lbl_Dir = new javax.swing.JLabel();
        lbl_Telf = new javax.swing.JLabel();
        lbl_ApPat = new javax.swing.JLabel();
        lbl_ApMat = new javax.swing.JLabel();
        lbl_CI = new javax.swing.JLabel();
        lbl_Correo = new javax.swing.JLabel();
        lbl_FecNac = new javax.swing.JLabel();
        lbl_TipoSangre = new javax.swing.JLabel();
        lbl_NombreV = new javax.swing.JLabel();
        lbl_ApPatV = new javax.swing.JLabel();
        lbl_ApMatV = new javax.swing.JLabel();
        lbl_FNacV = new javax.swing.JLabel();
        lbl_TipoSangreV = new javax.swing.JLabel();
        lbl_CIV = new javax.swing.JLabel();
        lbl_TelfV = new javax.swing.JLabel();
        lbl_DirV = new javax.swing.JLabel();
        lbl_CorreoV = new javax.swing.JLabel();
        cmb_Pacientes = new javax.swing.JComboBox();
        panel_Tratamientos = new javax.swing.JScrollPane();
        ipanel_Tratamientos = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel_Paciente.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Paciente"));

        lbl_IdPaciente.setText("ID Paciente :");

        lbl_Nombre.setText("Nombre :");

        lbl_Dir.setText("Direccion :");

        lbl_Telf.setText("Telefono :");

        lbl_ApPat.setText("Ap. Paterno :");

        lbl_ApMat.setText("Ap, Materno :");

        lbl_CI.setText("CI :");

        lbl_Correo.setText("Correo :");

        lbl_FecNac.setText("Fecha Nacimiento :");

        lbl_TipoSangre.setText("Tipo Sangre :");

        cmb_Pacientes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmb_Pacientes.setSelectedItem("");
        cmb_Pacientes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_PacientesItemStateChanged(evt);
            }
        });
        cmb_Pacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_PacientesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_PacienteLayout = new javax.swing.GroupLayout(panel_Paciente);
        panel_Paciente.setLayout(panel_PacienteLayout);
        panel_PacienteLayout.setHorizontalGroup(
            panel_PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_PacienteLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(panel_PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lbl_ApPat)
                        .addComponent(lbl_ApMat))
                    .addGroup(panel_PacienteLayout.createSequentialGroup()
                        .addComponent(lbl_TipoSangre)
                        .addGap(33, 33, 33)
                        .addComponent(lbl_TipoSangreV))
                    .addGroup(panel_PacienteLayout.createSequentialGroup()
                        .addGroup(panel_PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_PacienteLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(panel_PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_IdPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_Nombre))
                                .addGap(26, 26, 26))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_PacienteLayout.createSequentialGroup()
                                .addComponent(lbl_FecNac)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(panel_PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_NombreV)
                            .addComponent(lbl_ApPatV)
                            .addComponent(lbl_ApMatV)
                            .addComponent(cmb_Pacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_FNacV))))
                .addGap(55, 55, 55)
                .addGroup(panel_PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_PacienteLayout.createSequentialGroup()
                        .addComponent(lbl_CI)
                        .addGap(49, 49, 49)
                        .addComponent(lbl_CIV)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panel_PacienteLayout.createSequentialGroup()
                        .addGroup(panel_PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_PacienteLayout.createSequentialGroup()
                                .addComponent(lbl_Telf)
                                .addGap(18, 18, 18)
                                .addComponent(lbl_TelfV))
                            .addGroup(panel_PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(panel_PacienteLayout.createSequentialGroup()
                                    .addComponent(lbl_Correo)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_CorreoV))
                                .addGroup(panel_PacienteLayout.createSequentialGroup()
                                    .addComponent(lbl_Dir)
                                    .addGap(18, 18, 18)
                                    .addComponent(lbl_DirV))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        panel_PacienteLayout.setVerticalGroup(
            panel_PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_PacienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_IdPaciente)
                    .addComponent(cmb_Pacientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panel_PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_PacienteLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(panel_PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_NombreV)
                            .addComponent(lbl_CIV)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_PacienteLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_Nombre)
                            .addComponent(lbl_CI))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_PacienteLayout.createSequentialGroup()
                        .addGroup(panel_PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_ApPat)
                            .addComponent(lbl_ApPatV))
                        .addGap(10, 10, 10)
                        .addGroup(panel_PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_ApMat)
                            .addComponent(lbl_ApMatV)))
                    .addGroup(panel_PacienteLayout.createSequentialGroup()
                        .addGroup(panel_PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_TelfV)
                            .addComponent(lbl_Telf))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel_PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_Dir)
                            .addComponent(lbl_DirV))
                        .addGap(9, 9, 9)
                        .addGroup(panel_PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_FecNac)
                            .addComponent(lbl_FNacV)
                            .addComponent(lbl_Correo)
                            .addComponent(lbl_CorreoV))))
                .addGap(7, 7, 7)
                .addGroup(panel_PacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_TipoSangre)
                    .addComponent(lbl_TipoSangreV))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel_Tratamientos.setBorder(javax.swing.BorderFactory.createTitledBorder("Tratamientos"));

        javax.swing.GroupLayout ipanel_TratamientosLayout = new javax.swing.GroupLayout(ipanel_Tratamientos);
        ipanel_Tratamientos.setLayout(ipanel_TratamientosLayout);
        ipanel_TratamientosLayout.setHorizontalGroup(
            ipanel_TratamientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 572, Short.MAX_VALUE)
        );
        ipanel_TratamientosLayout.setVerticalGroup(
            ipanel_TratamientosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 271, Short.MAX_VALUE)
        );

        panel_Tratamientos.setViewportView(ipanel_Tratamientos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_Paciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel_Tratamientos)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel_Paciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_Tratamientos, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_PacientesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_PacientesItemStateChanged
        
        // Clear all components.
        ipanel_Tratamientos.removeAll();
        
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String id = (String) cmb_Pacientes.getSelectedItem();
            paciente = pacienteCtrl.buscarPaciente(id);
            setCamposPaciente(paciente);
            setTratamientos();
        }
    }//GEN-LAST:event_cmb_PacientesItemStateChanged

    private void cmb_PacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_PacientesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_PacientesActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmb_Pacientes;
    private javax.swing.JPanel ipanel_Tratamientos;
    private javax.swing.JLabel lbl_ApMat;
    private javax.swing.JLabel lbl_ApMatV;
    private javax.swing.JLabel lbl_ApPat;
    private javax.swing.JLabel lbl_ApPatV;
    private javax.swing.JLabel lbl_CI;
    private javax.swing.JLabel lbl_CIV;
    private javax.swing.JLabel lbl_Correo;
    private javax.swing.JLabel lbl_CorreoV;
    private javax.swing.JLabel lbl_Dir;
    private javax.swing.JLabel lbl_DirV;
    private javax.swing.JLabel lbl_FNacV;
    private javax.swing.JLabel lbl_FecNac;
    private javax.swing.JLabel lbl_IdPaciente;
    private javax.swing.JLabel lbl_Nombre;
    private javax.swing.JLabel lbl_NombreV;
    private javax.swing.JLabel lbl_Telf;
    private javax.swing.JLabel lbl_TelfV;
    private javax.swing.JLabel lbl_TipoSangre;
    private javax.swing.JLabel lbl_TipoSangreV;
    private javax.swing.JPanel panel_Paciente;
    private javax.swing.JScrollPane panel_Tratamientos;
    // End of variables declaration//GEN-END:variables

    private void setComboBoxPacientes() {

        pacientes = new DefaultComboBoxModel();
        listaPacientes = pacienteCtrl.getAllPacientes();

        for (int i = 0; i < listaPacientes.size(); i++) {
            pacientes.addElement(listaPacientes.get(i).getIdPaciente());
        }

        cmb_Pacientes.setModel(pacientes);
        cmb_Pacientes.setMaximumRowCount(4);
        
        // sets the initial paciente as default
        if (listaPacientes.size() > 0) {
            paciente = pacienteCtrl.buscarPaciente(listaPacientes.get(0).getIdPaciente());
        }
    }

    private void setCamposPaciente(Paciente paciente) {
        if (paciente != null) {
            lbl_NombreV.setText(paciente.getNombre());
            lbl_ApPatV.setText(paciente.getApPaterno());
            lbl_ApMatV.setText(paciente.getApMaterno());
            lbl_FNacV.setText(paciente.getFnac());
            lbl_CIV.setText(paciente.getCi());
            lbl_TipoSangreV.setText(paciente.getTipoSangre());
            lbl_CorreoV.setText(paciente.getCorreo());
            lbl_TelfV.setText(paciente.getTelefono());
            lbl_DirV.setText(paciente.getDireccion());
        }
    }

    private void setTratamientos() {
        if (paciente != null) {
            List<Muestra> muestras = muestraCtrl.getAllMuestras(paciente.getIdPaciente());

            if (!muestras.isEmpty()) {
                for (Muestra muestra : muestras) {
                    TratamientoPanel tp = new TratamientoPanel(usuario, muestra);
                    tp.setVisible(true);
                    ipanel_Tratamientos.add(tp);
                }
            } else {
                ipanel_Tratamientos.add(new Label("No hay muestras ni tratamientos para este paciente."));
            }
        }
    }
}
