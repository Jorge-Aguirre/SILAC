/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.EnsayoCtrl;
import controlador.MuestraCtrl;
import controlador.PacienteCtrl;
import dao.Factory.DAOFactory;
import dao.PacienteDAO;
import java.awt.Color;
import java.awt.Frame;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import modelo.Ensayo;
import modelo.Muestra;
import modelo.Paciente;

/**
 *
 * @author Marcelo
 */
public class Informe extends javax.swing.JFrame {

    private final MuestraCtrl muestraCtrl;
    private final PacienteCtrl pacienteCtrl;
    private final EnsayoCtrl ensayoCtrl;
    private Paciente paciente;
    private List<Muestra> listaMuestras;
    private List<Ensayo> listaEnsayos;

    /**
     * Creates new form Informe
     */
    public Informe() {
        initComponents();
        pacienteCtrl = new PacienteCtrl();
        muestraCtrl = new MuestraCtrl();
        ensayoCtrl = new EnsayoCtrl();
        disableComponents();
    }

    private void enableIDPaciente() {
        txtF_idPaciente.setEnabled(true);
        btn_buscarPaciente.setEnabled(true);
    }

    private void enableCambiarPaciente() {
        btn_cambiarPaciente.setEnabled(true);
    }

    private void disableIDPaciente() {
        txtF_idPaciente.setEnabled(false);
        btn_buscarPaciente.setEnabled(false);
    }

    public void disableComponents() {
        txtA_VistaPrevia.setEnabled(false);
        cmb_Muestras.setEnabled(false);
        rbtn_EnsayosSI.setEnabled(false);
        rbtn_EnsayosSI.setSelected(true);
        rbtn_EnsayosNo.setEnabled(false);
        btn_Imprimir.setEnabled(false);
        btn_generarInforme.setEnabled(false);
        chk_Instrumento.setEnabled(false);
        chk_Observaciones.setEnabled(false);
        chk_SelectAll.setEnabled(false);
        chk_SolBuffer.setEnabled(false);
        chk_TipoMuestra.setEnabled(false);
        chk_Tipotest.setEnabled(false);
        chk_VolumenMuestra.setEnabled(false);
    }

    public void enableComponents() {
        txtA_VistaPrevia.setEnabled(true);
        txtA_VistaPrevia.setEditable(false);
        cmb_Muestras.setEnabled(true);
        rbtn_EnsayosSI.setEnabled(true);
        rbtn_EnsayosNo.setEnabled(true);
        btn_Imprimir.setEnabled(true);
        btn_generarInforme.setEnabled(true);
        chk_Instrumento.setEnabled(true);
        chk_Observaciones.setEnabled(true);
        chk_SelectAll.setEnabled(true);
        chk_SolBuffer.setEnabled(true);
        chk_TipoMuestra.setEnabled(true);
        chk_Tipotest.setEnabled(true);
        chk_VolumenMuestra.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtF_idPaciente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmb_Muestras = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        chk_SolBuffer = new javax.swing.JCheckBox();
        chk_TipoMuestra = new javax.swing.JCheckBox();
        chk_Tipotest = new javax.swing.JCheckBox();
        chk_Instrumento = new javax.swing.JCheckBox();
        chk_VolumenMuestra = new javax.swing.JCheckBox();
        chk_Observaciones = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        rbtn_EnsayosSI = new javax.swing.JRadioButton();
        rbtn_EnsayosNo = new javax.swing.JRadioButton();
        btn_generarInforme = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtA_VistaPrevia = new javax.swing.JTextArea();
        btn_Imprimir = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        chk_SelectAll = new javax.swing.JCheckBox();
        btn_buscarPaciente = new javax.swing.JButton();
        label_pacienteControl = new javax.swing.JLabel();
        btn_cambiarPaciente = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Informe de An√°lisis Por Paciente "));

        jLabel1.setText("Introduzca ID Paciente : ");

        jLabel2.setText("Incluir Muestras: ");

        cmb_Muestras.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Incluir Datos de :");

        chk_SolBuffer.setText("Solucion Buffer");
        chk_SolBuffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_SolBufferActionPerformed(evt);
            }
        });

        chk_TipoMuestra.setText("Tipo de Muestra");
        chk_TipoMuestra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_TipoMuestraActionPerformed(evt);
            }
        });

        chk_Tipotest.setText("Tipo Test");
        chk_Tipotest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_TipotestActionPerformed(evt);
            }
        });

        chk_Instrumento.setText("Instrumento");
        chk_Instrumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_InstrumentoActionPerformed(evt);
            }
        });

        chk_VolumenMuestra.setText("Volumen Muestra");
        chk_VolumenMuestra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_VolumenMuestraActionPerformed(evt);
            }
        });

        chk_Observaciones.setText("Observaciones");
        chk_Observaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_ObservacionesActionPerformed(evt);
            }
        });

        jLabel4.setText("Incluir Datos Ensayos :");

        buttonGroup1.add(rbtn_EnsayosSI);
        rbtn_EnsayosSI.setText("Si");
        rbtn_EnsayosSI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtn_EnsayosSIActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtn_EnsayosNo);
        rbtn_EnsayosNo.setText("No");

        btn_generarInforme.setText("Generar Informe");
        btn_generarInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_generarInformeActionPerformed(evt);
            }
        });

        txtA_VistaPrevia.setColumns(20);
        txtA_VistaPrevia.setRows(5);
        jScrollPane1.setViewportView(txtA_VistaPrevia);

        btn_Imprimir.setText("Imprimir");

        jLabel6.setText("Vista Previa :");

        chk_SelectAll.setText("Seleccionar Todos");
        chk_SelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_SelectAllActionPerformed(evt);
            }
        });

        btn_buscarPaciente.setText("Buscar");
        btn_buscarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarPacienteActionPerformed(evt);
            }
        });

        label_pacienteControl.setText("Introduzca Id Paciente");

        btn_cambiarPaciente.setText("Cambiar Paciente");
        btn_cambiarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cambiarPacienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtF_idPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_buscarPaciente))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(rbtn_EnsayosSI)
                                        .addGap(22, 22, 22)
                                        .addComponent(rbtn_EnsayosNo))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cmb_Muestras, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(label_pacienteControl))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(0, 59, Short.MAX_VALUE)
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(chk_SolBuffer)
                                            .addComponent(chk_Tipotest)
                                            .addComponent(chk_VolumenMuestra)
                                            .addComponent(chk_SelectAll))
                                        .addGap(36, 36, 36)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(chk_Instrumento)
                                            .addComponent(chk_TipoMuestra)
                                            .addComponent(chk_Observaciones)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btn_cambiarPaciente)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btn_generarInforme)
                                .addGap(18, 18, 18)
                                .addComponent(btn_Imprimir)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtF_idPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btn_buscarPaciente)
                    .addComponent(btn_cambiarPaciente))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(label_pacienteControl, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cmb_Muestras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(rbtn_EnsayosSI)
                            .addComponent(rbtn_EnsayosNo))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_generarInforme)
                            .addComponent(btn_Imprimir)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(chk_SolBuffer)
                            .addComponent(chk_TipoMuestra))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chk_Tipotest)
                            .addComponent(chk_Instrumento))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chk_VolumenMuestra)
                            .addComponent(chk_Observaciones))
                        .addGap(18, 18, 18)
                        .addComponent(chk_SelectAll)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 34, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chk_SolBufferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_SolBufferActionPerformed
        chk_SelectAll.setSelected(false);
    }//GEN-LAST:event_chk_SolBufferActionPerformed

    private void chk_VolumenMuestraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_VolumenMuestraActionPerformed
        chk_SelectAll.setSelected(false);
    }//GEN-LAST:event_chk_VolumenMuestraActionPerformed

    private void chk_ObservacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_ObservacionesActionPerformed
        chk_SelectAll.setSelected(false);
    }//GEN-LAST:event_chk_ObservacionesActionPerformed

    private void rbtn_EnsayosSIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtn_EnsayosSIActionPerformed
    }//GEN-LAST:event_rbtn_EnsayosSIActionPerformed

    private void btn_generarInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_generarInformeActionPerformed
        String combo = cmb_Muestras.getSelectedItem().toString();
        listaMuestras = muestraCtrl.getAllMuestras(paciente.getIdPaciente());
        if (!combo.equals("Incluir Todas")) {
            Muestra m = muestraCtrl.buscarMuestra(paciente.getIdPaciente(), combo);
            listaMuestras = new ArrayList<Muestra>();
            listaMuestras.add(m);
        }
        generarInforme(listaMuestras);
    }//GEN-LAST:event_btn_generarInformeActionPerformed

    private void chk_SelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_SelectAllActionPerformed
        if (!chk_SelectAll.isSelected()) {
            chk_Instrumento.setSelected(false);
            chk_Observaciones.setSelected(false);
            chk_SolBuffer.setSelected(false);
            chk_SolBuffer.setSelected(false);
            chk_TipoMuestra.setSelected(false);
            chk_Tipotest.setSelected(false);
            chk_VolumenMuestra.setSelected(false);
        } else {
            chk_Instrumento.setSelected(true);
            chk_Observaciones.setSelected(true);
            chk_SolBuffer.setSelected(true);
            chk_SolBuffer.setSelected(true);
            chk_TipoMuestra.setSelected(true);
            chk_Tipotest.setSelected(true);
            chk_VolumenMuestra.setSelected(true);
        }
    }//GEN-LAST:event_chk_SelectAllActionPerformed

    private void btn_buscarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarPacienteActionPerformed

        paciente = pacienteCtrl.buscarPaciente(txtF_idPaciente.getText());
        System.out.println(paciente);

        if (paciente == null) {
            label_pacienteControl.setText("No existe el paciente con el ID : " + txtF_idPaciente.getText());
            label_pacienteControl.setForeground(Color.red);
            //disableComponents();
        } else {
            System.out.println("Aceptado");
            label_pacienteControl.setText("Paciente ID : " + txtF_idPaciente.getText());
            label_pacienteControl.setForeground(Color.blue);
            setComboBoxMuestras(paciente);
            enableComponents();
            disableIDPaciente();
        }
    }//GEN-LAST:event_btn_buscarPacienteActionPerformed

    private void btn_cambiarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cambiarPacienteActionPerformed
        int opcion = JOptionPane.showConfirmDialog(new Frame(),
                "¬øSeguro que desea cambiar de Paciente?\n",
                "PRECAUCI√ìN",
                JOptionPane.WARNING_MESSAGE);

        if (opcion == JOptionPane.OK_OPTION) {
            disableComponents();
            //cleanData();
            enableIDPaciente();
        }
    }//GEN-LAST:event_btn_cambiarPacienteActionPerformed

    private void chk_TipoMuestraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_TipoMuestraActionPerformed
        chk_SelectAll.setSelected(false);
    }//GEN-LAST:event_chk_TipoMuestraActionPerformed

    private void chk_TipotestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_TipotestActionPerformed
        chk_SelectAll.setSelected(false);
    }//GEN-LAST:event_chk_TipotestActionPerformed

    private void chk_InstrumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_InstrumentoActionPerformed
        chk_SelectAll.setSelected(false);
    }//GEN-LAST:event_chk_InstrumentoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Informe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Informe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Informe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Informe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Informe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Imprimir;
    private javax.swing.JButton btn_buscarPaciente;
    private javax.swing.JButton btn_cambiarPaciente;
    private javax.swing.JButton btn_generarInforme;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox chk_Instrumento;
    private javax.swing.JCheckBox chk_Observaciones;
    private javax.swing.JCheckBox chk_SelectAll;
    private javax.swing.JCheckBox chk_SolBuffer;
    private javax.swing.JCheckBox chk_TipoMuestra;
    private javax.swing.JCheckBox chk_Tipotest;
    private javax.swing.JCheckBox chk_VolumenMuestra;
    private javax.swing.JComboBox cmb_Muestras;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_pacienteControl;
    private javax.swing.JRadioButton rbtn_EnsayosNo;
    private javax.swing.JRadioButton rbtn_EnsayosSI;
    private javax.swing.JTextArea txtA_VistaPrevia;
    private javax.swing.JTextField txtF_idPaciente;
    // End of variables declaration//GEN-END:variables

    private void setComboBoxMuestras(Paciente paciente) {

        final DefaultComboBoxModel muestras = new DefaultComboBoxModel();

        listaMuestras = muestraCtrl.getAllMuestras(paciente.getIdPaciente());
        for (int i = 0; i < listaMuestras.size(); i++) {
            muestras.addElement(listaMuestras.get(i).getIdMuestra());
        }
        muestras.addElement("Incluir Todas");
        cmb_Muestras.setModel(muestras);
    }

    private void generarInforme(List<Muestra> listaMuestras) {
        StringBuilder sb = new StringBuilder(50);
        sb.append("************************************************************************************************************\n");
        sb.append("                                                       INFORME DE ANALISIS POR PACIENTE\n");
        sb.append("************************************************************************************************************\n\n\n");
        sb.append("********************************************** PACINETE ID **********************************************\n\n");
        sb.append("ID Paciente : " + paciente.getIdPaciente() + "\n\n");
        sb.append("*************************************** INFORMACI√ìN MUESTRAS **************************************\n\n");

        for (int i = 0; i < listaMuestras.size(); i++) {

            sb.append("---------------------------------------------------------- MUESTRA " + listaMuestras.get(i).getIdMuestra() + " ----------------------------------------------------------\n\n");
            if (chk_TipoMuestra.isSelected()) {
                sb.append("Tipo Muestra :       " + listaMuestras.get(i).getTipoMuestra() + "\n");
            }
            if (chk_SolBuffer.isSelected()) {
                sb.append("Soluci√≥n Buffer :        " + listaMuestras.get(i).getSolucionBuffer() + "\n");
            }
            if (chk_Tipotest.isSelected()) {
                sb.append("Tipo Test :      " + listaMuestras.get(i).getTipoTest() + "\n");
            }
            if (chk_Instrumento.isSelected()) {
                sb.append("Instrumento Utilizado :      " + listaMuestras.get(i).getInstrumento() + "\n");
            }
            if (chk_VolumenMuestra.isSelected()) {
                sb.append("Volumen Muestra :        " + listaMuestras.get(i).getVolMuestra() + " ml\n");
            }
            sb.append("RESULTADO FINAL MUESTRA :        " + listaMuestras.get(i).getResultadoFinal() + "\n");
            if (chk_Observaciones.isSelected()) {
                sb.append("OBSERVACIONES MUESTRA :      " + listaMuestras.get(i).getObservaciones() + "\n");
            }
            sb.append("\n\n");
            if (rbtn_EnsayosSI.isSelected()) {
                listaEnsayos = ensayoCtrl.getAllEnsayos(paciente.getIdPaciente(), listaMuestras.get(i).getIdMuestra());
                for (int j = 0; j < listaEnsayos.size(); j++) {
                    Ensayo ensayo = listaEnsayos.get(j);
                    sb.append("-- Ensayo " + ensayo.getIdEnsayo() + " --\n\n");
                    sb.append("N√∫mero Extracci√≥n : " + ensayo.getNumeroExtraccion() + "\n");
                    sb.append("Fecha Extracci√≥n : " + ensayo.getFechaExtraccion() + "\n");
                    sb.append("Tipo Extracci√≥n : " + ensayo.getTipoExtraccion() + "\n");
                    sb.append("Fecha Gel : " + ensayo.getFechaGel() + "\n");
                    sb.append("Tipo Gel : " + ensayo.getTipoGel() + "\n");
                    sb.append("RESULTADO ENSAYO : " + ensayo.getResultado());
                    sb.append("\n\n");

                }
            }
            sb.append("\n\n\n");

        }

        txtA_VistaPrevia.setText(sb.toString());
        txtA_VistaPrevia.setCaretPosition(0);
    }
}
